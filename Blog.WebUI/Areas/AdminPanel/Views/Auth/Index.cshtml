@using System.Globalization
@using System.Web.UI.WebControls
@model Blog.WebUI.ViewModels.AuthViewModel

@if (!string.IsNullOrEmpty(ViewBag.message))
{



    @section Scripts
    {
        <script>

               $(document).ready(function () {
                alertbox("@ViewBag.title","@ViewBag.message");
                });

        </script>
    }


}
@{
    string action = ViewBag.IsNew ? "createuser" : "update";
    string button = ViewBag.IsNew ? "Create" : "Update";
    
}

<h3 class="col h3">@button User</h3>


@*@using (Html.BeginForm(null, null, FormMethod.Posts, new { @class = "form-panel" }))*@

<form class="form-panel" action=@Url.Action(action) method="post">



    @{
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        if (!ViewBag.IsNew)
        {
            @Html.HiddenFor(x => x.Register.Id)
            
        }


        <div class="form-group">
            <div class="form-group">
                @Html.LabelFor(x => x.Register.FullName)
                @Html.TextBoxFor(x => x.Register.FullName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Register.FullName)

            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Register.UserName)
                @Html.TextBoxFor(x => x.Register.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Register.UserName)

            </div>

            <div class="form-group">

                @Html.LabelFor(x => x.Register.Email)
                @Html.TextBoxFor(x => x.Register.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Register.Email)


            </div>


            <div class="form-group">

                @Html.LabelFor(x => x.Register.Password)
                @Html.PasswordFor(x => x.Register.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Register.Password)


            </div>


            <div class="form-group">

                @Html.LabelFor(x => x.Register.ConfirmPassword)
                @Html.PasswordFor(x => x.Register.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Register.ConfirmPassword)


            </div>
            <label for="roles">Roles</label>
            <div id="roles" class="form-group">
                <ul class="list-group">
                    @for (int i = 0; i < Model.Register.Roles.Count; i++)
                    {
                        <li class="list-group-item">
                            
                            @Html.Hidden("Register.Roles[" + i + "].Id", Model.Register.Roles[i].Id)
                            @Html.Hidden("Register.Roles[" + i +"].Name",Model.Register.Roles[i].Name)
                        
                                @Html.CheckBox("Register.Roles[" + i + "].IsChecked", Model.Register.Roles[i].IsChecked)
                                @Model.Register.Roles[i].Name
                          

                        </li>

                       
                    }


                </ul>
        </div>


            <div class="form-group">
                <div class="col-sm-4"></div>


                <button class="btn btn-default btn-primary" typse="submit">@button User</button>
                <button class="btn btn-default btn-warning" type="reset">Reset</button>
                <button href="@Url.Action("Users")" class="btn btn-default btn-danger">Cancel</button>

            </div>


        </div>
    }
</form>




<script>

    function alertbox (title,msg) {

        $.gritter.add({
            // (string | mandatory) the heading of the notification
            title: title,
            text: msg
            // (string | mandatory) the text inside the notification
        });

        return false;
    };


</script>


